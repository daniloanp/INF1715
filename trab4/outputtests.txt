cd ../trab1/ && rm -f lex.yy.c && make lex.yy.c
make[1]: Entering directory '/home/danilo/puc-rio/INF1715/trab1'
flex --header-file=lex.yy.h mini0-lex.l 
make[1]: Leaving directory '/home/danilo/puc-rio/INF1715/trab1'
cd ../trab2/
gcc -std=c99 -D_GNU_SOURCE -ggdb -o mini0-parser main.c  symboltype.h symboltype.c ../trab3/build_ast.h    ../trab3/build_ast.c symbols.h symbols.c  symboltable.h symboltable.c ../trab3/ast.h ../trab3/ast.c ../trab2/recursive_parser.h ../trab2/recursive_parser.c ../trab1/token.h ../trab1/token.c ../trab1/token_list.h ../trab1/token_list.c ../trab1/lex.yy.h ../trab1/lex.yy.c ../trab1/mini0-lex.h ../trab1/mini0-lex.c 
bash -c "source ../iterate_directory.sh; iterate_directory mini0-parser testes"

==== --- |  Testing file 'testes/01-global.m0'  | --- =====

Valid Program!!!
   Program
      DeclVar '(i)'  TYPE: INT
         tp_int(0)

------- x -------


==== --- |  Testing file 'testes/02-fun.m0'  | --- =====

Valid Program!!!
   Program
      fun '(f)'  TYPE: FUN VOID
         Block

------- x -------


==== --- |  Testing file 'testes/03-nls.m0'  | --- =====

undeclared variable! - i at line 5

------- x -------


==== --- |  Testing file 'testes/04-funglobal.m0'  | --- =====

Redeclared variable, previous declared at line 1! - error at line 3

------- x -------


==== --- |  Testing file 'testes/05-params.m0'  | --- =====

Redeclared name, previous declared as variable at line 2! - error at line 5

------- x -------


==== --- |  Testing file 'testes/06-declvar.m0'  | --- =====

Non-numerical expression used with numerical operator - at line 11

------- x -------


==== --- |  Testing file 'testes/07-if.m0'  | --- =====

undeclared variable! - a at line 3

------- x -------


==== --- |  Testing file 'testes/11-ifdecl.m0'  | --- =====

undeclared variable! - a at line 3

------- x -------


==== --- |  Testing file 'testes/12-while.m0'  | --- =====

undeclared function! - printf at line 6

------- x -------


==== --- |  Testing file 'testes/14-ifwhile.m0'  | --- =====

undeclared function! - printf at line 10

------- x -------


==== --- |  Testing file 'testes/16-atrib.m0'  | --- =====

Redeclared variable, previous declared at line 2! - error at line 11

------- x -------


==== --- |  Testing file 'testes/17-call.m0'  | --- =====

Line 7
 Line 7
 Valid Program!!!
   Program
      fun '(fibo)'  TYPE: FUN INT
         ParamList
            Param '(i)'  TYPE: INT
               tp_int(0)
         tp_int(0)
         Block
            If
               Exp  TYPE: INT
                  <=  TYPE: INT
                     Var '(i)'  TYPE: INT
                     int: '(1)'  TYPE: INT
               Block
                  Return
                     Exp  TYPE: INT
                        int: '(1)'  TYPE: INT
               Else
                  Block
                     Return
                        Exp  TYPE: INT
                           +  TYPE: INT
                              Call '(fibo)'  TYPE: INT
                                 Exp  TYPE: INT
                                    -  TYPE: INT
                                       Var '(i)'  TYPE: INT
                                       int: '(1)'  TYPE: INT
                              Call '(fibo)'  TYPE: INT
                                 Exp  TYPE: INT
                                    -  TYPE: INT
                                       Var '(i)'  TYPE: INT
                                       int: '(2)'  TYPE: INT

------- x -------


==== --- |  Testing file 'testes/19-callargs.m0'  | --- =====

Redeclared name, previous declared as variable at line 2! - error at line 6

------- x -------


==== --- |  Testing file 'testes/20-return.m0'  | --- =====

Valid Program!!!
   Program
      fun '(the_answer)'  TYPE: FUN CHAR
         tp_char(0)
         Block
            Return
               Exp  TYPE: INT
                  int: '(42)'  TYPE: INT

------- x -------


==== --- |  Testing file 'testes/21-arrays.m0'  | --- =====

incompatible types when assigning - at line 9

------- x -------


==== --- |  Testing file 'testes/21-return-noargs.m0'  | --- =====

Valid Program!!!
   Program
      fun '(sim)'  TYPE: FUN VOID
         Block
            If
               Exp  TYPE: INT
                  >  TYPE: INT
                     int: '(1)'  TYPE: INT
                     int: '(2)'  TYPE: INT
               Block
                  Return

------- x -------


==== --- |  Testing file 'testes/22-exp.m0'  | --- =====

undeclared variable! - i at line 3

------- x -------


==== --- |  Testing file 'testes/35-expprio.m0'  | --- =====

undeclared variable! - a at line 3

------- x -------


==== --- |  Testing file 'testes/37-invprio.m0'  | --- =====

undeclared variable! - a at line 6

------- x -------

